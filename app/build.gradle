// Apply plugins at the top
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    signingConfigs {
        publish {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }
    compileSdk 35
    namespace 'akhil.alltrans'

    defaultConfig {
        applicationId "akhil.alltrans"
        minSdkVersion 29
        targetSdkVersion 35
        versionCode 196
        versionName "1.9.6"
        multiDexEnabled true
        signingConfig signingConfigs.publish
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true // Habilitado para release para reduzir tamanho do APK
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    // Habilitar ViewBinding (recomendado)
    buildFeatures {
        viewBinding true
    }
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    // Kotlin e Core
    implementation 'androidx.core:core-ktx:1.16.0'
    compileOnly 'de.robv.android.xposed:api:82'

    // Network e JSON
    implementation 'com.google.code.gson:gson:2.13.1'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    // UI Components
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'

    // SwipeRefreshLayout (para corrigir o erro do ModelManagerFragment)
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.4.0'

    // Preferences
    implementation 'androidx.preference:preference-ktx:1.2.1'

    // ML Kit - Versões estáveis e corretas
    implementation 'com.google.mlkit:translate:17.0.3'
    implementation 'com.google.android.gms:play-services-mlkit-language-id:17.0.0'

    // Lifecycle & Coroutines
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.9.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.9.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1'

    // Fragment KTX (para usar fragmentos de forma mais moderna)
    implementation 'androidx.fragment:fragment-ktx:1.8.7'

    // Activity KTX
    implementation 'androidx.activity:activity-ktx:1.10.1'
}

// Suas tasks customizadas (mantidas como estão)
afterEvaluate {
    installDebug.doLast {
//        updateVirtualXposedAPP.exec()
//        clearLog.exec()
//        rebootVirtualXposedAPP.exec()
//        launchVirtualXposedAPP.exec()
    }
}

tasks.register('updateVirtualXposedAPP', Exec) {
    def pkg = android.defaultConfig.applicationId
    commandLine android.adbExecutable, 'shell', 'am', 'broadcast', '-a', 'io.va.exposed.CMD', '-e', 'cmd', 'update', '-e', 'pkg', pkg
}

tasks.register('clearLog', Exec) {
    commandLine android.adbExecutable, 'logcat', '-c'
}

tasks.register('rebootVirtualXposedAPP', Exec) {
    commandLine android.adbExecutable, 'shell', 'am', 'broadcast', '-a', 'io.va.exposed.CMD', '-e', 'cmd', 'reboot'
}

tasks.register('launchVirtualXposedAPP', Exec) {
    def pkg = "com.megabox.mop" // for example: com.tencent.mm
    commandLine android.adbExecutable, 'shell', 'am', 'broadcast', '-a', 'io.va.exposed.CMD', '-e', 'cmd', 'launch', '-e', 'pkg', pkg
}